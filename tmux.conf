# change prefix to Ctrl-a (like in gnu-screen)

#unbind C-b
#set-option -g prefix C-a
#bind-key C-a send-prefix


# shell
#set -g default-command /bin/zsh
#set -g default-shell /bin/zsh


# start with window 1 (instead of 0)
set -g base-index 1


# start with pane 1
set -g pane-base-index 1


# screen mode
set -g default-terminal "screen-256color"


# source config file
bind r source-file ~/.tmux.conf


# history
set -g history-limit 4096


# allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# use vi mode
setw -g mode-keys vi
set -g status-keys vi


# tmux-zoom.sh
#bind C-z run "tmux-zoom.sh"

# easy-to-remember split pane commands
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# colon :
bind : command-prompt

# panes

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# status line
set -g status-justify left
set -g status-interval 2


# messaging
set -g message-command-style fg=blue,bg=black


#window mode


# window status
#setw -g window-status-format " #F#I:#W#F "
#setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "

# Info on left (I don't have a session display for now)
set -g status-left ''


# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none


# tmux clock
set -g clock-mode-colour blue


# some key-binding changes
bind x kill-pane
bind X next-layout
bind Z previous-layout

#urxvt tab like window switching (-n: no prior escape seq)
bind -n S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

set -g default-terminal "screen-256color"

# The modes {

setw -g clock-mode-colour colour135
setw -g mode-style bg=colour6,fg=colour0,bold,fg=colour196,bg=colour238

# }
# The panes {

set -g pane-border-style fg=black,bg=colour235,fg=colour238
set -g pane-active-border-style fg=brightred,bg=colour236,fg=colour51

# }
# The statusbar {

set -g status-position bottom
set -g status-style bg=default,fg=colour12,bg=colour234,fg=colour137,dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style bg=colour0,fg=colour11,dim,fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style bg=green,fg=black,reverse,fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style bold,fg=colour255,bg=colour1

# change based on status
set -g status-left '#{?client_prefix,#[reverse]<!>#[noreverse] ,}[#S] '
#set-hook -g pane-mode-changed 'if -F "#{m/r:(copy|view)-mode,#{pane_mode}}" "set status-style bg=red" "set -u status-style"'

# }
# The messages {

set -g message-style fg=black,bg=yellow,bold,fg=colour232,bg=colour166

# }

# clipboard
# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection primary"

# v starts a selection y finishes, same way Space and Enter do
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# display
set-hook -g client-attached 'run-shell ~/.tmuxscripts/update_display.sh'

# https://github.com/tmux-plugins/tmux-yank
run-shell ~/.tmuxscripts/tmux-yank/yank.tmux

# tmux escape time
# https://github.com/neovim/neovim/issues/3593
# https://github.com/tmux/tmux/issues/131
set escape-time 0

